# forward https traffic to upstream nginx
#

#log_format perf '$remote_addr $status - $request_length $bytes_sent';
log_format gl_stg_format 'atproxy: $remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$gzip_ratio" '
    '<site=staging|msec=$msec|connection=$connection|connection_requests=$connection_requests|reqlen=$request_length|millis=$request_time|bytes_sent=$bytes_sent>';
# note:
# use of time_iso8601 troublesome with graylog extractor/date converters: timezone and T between date and time

server {
    listen       {{ staging_ip | default('127.0.0.1') }}:8443 ssl;
    # note: with Docker 1.10 (and maybe other version) cannot reach nginx server on 127.0.0.1
    # must bind explicitly to docker managed ip or use '*' to bind to all interfaces
    # but for Baustellenseite, 127.0.0.1:443 is what we want, so leave this as default

    server_name  {{ staging_fqdn | default('at-staging.haufe-ep.de') }};

    #root /usr/share/nginx/html;
    #proxy_read_timeout 600s;
    #keepalive_timeout 75; 
    # keepalive timout 75 seconds is default, but do not explicitly set unless there is a reason to do that
    # GH-168 to relax constrains with upload of large image files (TIFF):
    proxy_read_timeout {{ proxy_read_timeout | default('600s') }};
    client_max_body_size {{ client_max_body_size | default('250m') }};

    # enable SSL
    ssl_certificate      /etc/nginx/ssl/at-acceptance.haufe-ep.de_151028.cert;
    ssl_certificate_key  /etc/nginx/ssl/at-acceptance.haufe-ep.de_151027.key;

    #ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  5m;

    #ssl_ciphers  HIGH:!aNULL:!MD5;
    #ssl_prefer_server_ciphers   on;

    #root /etc/nginx/static/;
    #error_page 403 /forbidden.html;

    access_log /var/log/nginx/access.log gl_stg_format;
    #access_log /var/log/nginx/access_staging.log main;
    error_log /var/log/nginx/error_staging.log info; #warn; 
    
    # redirecting to upstream nginx, pass real IP on
    # https://rtcamp.com/tutorials/nginx/forwarding-visitors-real-ip/
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    
    proxy_set_header SCHEME $scheme;      # http/https
    proxy_set_header CLIENT_CERT $ssl_client_raw_cert;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header Host $host;

    # baustelle={{baustelle | default('(not set)')}}
 
    {% if baustelle is not defined or baustelle!='false' %}
    {# must explicitly set baustelle=False to pass request to upstream host #}
	
    root /usr/share/nginx/html/baustelle;
	index error503.html;
	
    # http://www.cyberciti.biz/faq/custom-nginx-maintenance-page-with-http503/
	
	# see if is evil
    #if (-f $document_root/error503.html) {
    #  return 503;
    #}
	
    error_page 503 @maintenance;
    location @maintenance {
        rewrite ^(.*)$ /error503.html break;
    }

    location / {
      return 503;
      #try_files $uri $uri/ =404;
    }

    {% else %}
    location / {
      #proxy_set_header SCHEME $scheme;      # http/https
      #proxy_set_header CLIENT_CERT $ssl_client_raw_cert;
      #proxy_set_header X-Forwarded-Proto https;
      #proxy_set_header X-Scheme $scheme;
      #proxy_set_header Host $host;
      # declarations above commented out, as not passing on https but terminating https here
      # or unsure if needed, or handled differently

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto http;
      proxy_set_header X-Url-Scheme $scheme;

      # redirecting to upstream nginx, pass real IP on
      # https://rtcamp.com/tutorials/nginx/forwarding-visitors-real-ip/
      # and https://suspicious.website/2015/02/18/generating-config-files-with-ansible-and-jinja2/
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;

      proxy_cache_bypass "1";
      proxy_pass https://{{active}};
      break;
    }
    {% endif %}
 
}

